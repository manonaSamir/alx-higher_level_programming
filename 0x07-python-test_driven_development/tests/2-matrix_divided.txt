The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for passing None as matrix:
	 >>> matrix_divided(None, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for passing None as div:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, None)
	 Traceback (most recent call last):
         ...
	 TypeError: div must be a number

Checking for matrix as list:
	 >>> matrix = "Hello"
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for list of mixed list and non-list items:
	 >>> matrix = [[1, 2, 3], "Hello"]
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for uneven matrix:
	 >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
	 >>> matrix_divided(matrix, 3)
	 Traceback (most recent call last):
         ...
	 TypeError: Each row of the matrix must have the same size
	 Checking for division with infinity in numerator and denomenator
	 >>> matrix_divided(matrix, float('inf'))
	 [[0.0, nan, 0.0], [0.0, 0.0, 0.0]]

Checking for no args:
	 >>> matrix_divided()
         Traceback (most recent call last):
         ...
         TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Checking for 1 arg:
	 >>> matrix_divided(matrix)
	 Traceback (most recent call last):
	 ...
    	 TypeError: matrix_divided() missing 1 required positional argument: 'div'

Checking for more than 2 args:
	 >>> matrix_divided(matrix, 1, 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() takes 2 positional arguments but 3 were given